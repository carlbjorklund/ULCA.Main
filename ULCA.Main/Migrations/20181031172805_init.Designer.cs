// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ULCA.Main.Models;

namespace ULCA.Main.Migrations
{
    [DbContext(typeof(EfCoreDb))]
    [Migration("20181031172805_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ULCA.Main.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatImage");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ULCA.Main.Models.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChaImage");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("ULCA.Main.Models.Schedule", b =>
                {
                    b.Property<int>("ScheduledId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AirDate");

                    b.Property<int>("ChannelId");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Image");

                    b.Property<TimeSpan>("LengthTimeSpan");

                    b.Property<int>("ShowId");

                    b.Property<DateTime>("StarTime");

                    b.HasKey("ScheduledId");

                    b.HasIndex("ChannelId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("ULCA.Main.Models.Show", b =>
                {
                    b.Property<int>("SchowId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Length");

                    b.Property<int?>("ScheduledId");

                    b.Property<string>("ShoImage");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("SchowId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ScheduledId");

                    b.ToTable("Shows");
                });

            modelBuilder.Entity("ULCA.Main.Models.Schedule", b =>
                {
                    b.HasOne("ULCA.Main.Models.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ULCA.Main.Models.Show", b =>
                {
                    b.HasOne("ULCA.Main.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ULCA.Main.Models.Schedule")
                        .WithMany("Shows")
                        .HasForeignKey("ScheduledId");
                });
#pragma warning restore 612, 618
        }
    }
}
